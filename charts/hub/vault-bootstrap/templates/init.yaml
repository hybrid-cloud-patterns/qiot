{{- if .Values.vault.init -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "vault-bootstrap.fullname" . }}-init
  labels:
    {{- include "vault-bootstrap.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        {{- include "vault-bootstrap.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "vault-bootstrap.serviceAccountName" . }}
      restartPolicy: Never
      containers:
      - name: init
        image: "{{ .Values.oc.image.repository }}:{{ .Values.oc.image.tag }}"
        command:
        - /bin/bash
        - '-c'
        - |
            #!/bin/bash
            set -x

            # Better rollout pod check
            sleep 30

            VAULT=$(oc -n {{ .Release.Namespace }} get pod -lapp.kubernetes.io/name=vault -o custom-columns=.:.metadata.name --no-headers)

            echo "Found pod: $VAULT"
            INITIALIZED=$(oc -n {{ .Release.Namespace }} exec ${VAULT} -- sh -c "if vault status -tls-skip-verify | grep 'Initialized' | grep -q 'true'; then echo 'TRUE'; else echo 'FALSE'; fi")
            if [[ "$INITIALIZED" == "TRUE" ]]; then
              exit 0
            fi

            oc -n {{ .Release.Namespace }} exec ${VAULT} --  vault operator init -tls-skip-verify -key-shares=1 -key-threshold=1 >/tmp/init.txt

            KEYS=$(cat /tmp/init.txt|grep "Unseal Key 1"|cut -d':' -f2| tr -d ' ')
            VAULT_TOKEN=$(cat /tmp/init.txt|grep "Initial Root Token"|cut -d':' -f2| tr -d ' ')

            # Secret must not part of the release
            cat > /tmp/secret.yaml<<EOF
            kind: Secret
              apiVersion: v1
              type: Opaque
              metadata:
                name: {{ include "vault-bootstrap.fullname" . }}
                namespace: {{ .Release.Namespace }}
              data:
            EOF

            echo "  KEYS: ${KEYS}" >> /tmp/secret.yaml
            echo "  VAULT_TOKEN: ${VAULT_TOKEN}" >> /tmp/secret.yaml
            cat /tmp/secret.yaml

            oc apply -f /tmp/secret.yaml
{{- end }}
