---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "issuer.fullname" . }}-setup
  labels:
    {{- include "issuer.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  namespace: {{ .Values.issuer.vault.namespace }}
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        {{- include "issuer.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: policy
        envFrom:
        - secretRef:
            name: {{ .Values.issuer.vault.secret }}
        image: {{ .Values.issuer.vault.image.repository }}:{{ .Values.issuer.vault.image.tag }}
        env:
        - name: VAULT_ADDR
          value: {{ .Values.issuer.vault.server }}
        command:
        - /bin/sh
        - '-c'
        - |

          if [ "$#" -ne 1 ]; then
              echo "Missing Projects"
          fi

          export BASE_DOMAIN={{ .Values.baseDomain }}
          export PROJECT={{ .Release.Namespace }}
          export PKI=${PROJECT}-pki
          export DOMAIN=${PROJECT}.$BASE_DOMAIN
          export ROLE=${PROJECT}-$BASE_DOMAIN
          # In future create a dedicate SA during project provision
          export SERVICE_ACCOUNT=default
          export WILDCARD_DOMAIN={{ .Values.wildcardDomain }}

          echo "Setup on ${PROJECT}"

          echo "Enable PKI Engine ${PKI}"

          vault secrets enable -tls-skip-verify -path=${PKI} -description="$PROJECT - Root CA" pki
          # 1 Year
          vault secrets tune -tls-skip-verify -max-lease-ttl=8760h ${PKI}

          vault write -tls-skip-verify ${PKI}/root/generate/internal \
              common_name=${DOMAIN} \
              ttl=8760h

          echo "CRL Configuration"

          vault write -tls-skip-verify ${PKI}/config/urls \
              issuing_certificates="$VAULT_ADDR/v1/${PKI}/ca" \
              crl_distribution_points="$VAULT_ADDR/v1/${PKI}/crl"

          echo "$VAULT_ADDR/v1/${PKI}/ca"
          echo "$VAULT_ADDR/v1/${PKI}/crl"

          echo "Configure Role for domain: ${DOMAIN}"

          vault write -tls-skip-verify ${PKI}/roles/${BASE_DOMAIN} \
              allowed_domains=${DOMAIN},${PROJECT}.svc,${WILDCARD_DOMAIN} \
              allow_subdomains=true \
              allowed_other_sans="*" \
              allow_glob_domains=true \
              allowed_uri_sans=*-${PROJECT}.${WILDCARD_DOMAIN} \
              max_ttl="31536000"

          echo "Create PKI Policy pki-${ROLE}-policy"

          vault policy write --tls-skip-verify pki-${ROLE}-policy - <<EOF
          path "${PKI}*"                               { capabilities = ["read", "list"] }
          path "${PKI}/roles/${BASE_DOMAIN}"   { capabilities = ["create", "update"] }
          path "${PKI}/sign/${BASE_DOMAIN}"    { capabilities = ["create", "update"] }
          path "${PKI}/issue/${BASE_DOMAIN}"   { capabilities = ["create"] }
          EOF

          echo "Authorize ServiceAccount ${SERVICE_ACCOUNT} on ${PROJECT}"

          vault write --tls-skip-verify auth/kubernetes/role/${ROLE} \
            bound_service_account_names=${SERVICE_ACCOUNT} bound_service_account_namespaces="${PROJECT}" \
            policies=pki-${ROLE}-policy \
            ttl=2h

          cat > policy.hcl << EOF
            path "sys/mounts/{{ .Release.Namespace }}-pki-*" {
              capabilities = ["create", "read", "update", "delete", "list"]
            }

            path "/{{ .Release.Namespace }}-pki-*" {
              capabilities = ["create", "read", "update", "delete", "list"]
            }
          EOF

          vault policy write -tls-skip-verify registration-{{ .Release.Namespace }}-admin ./policy.hcl

          vault write -tls-skip-verify auth/kubernetes/role/{{ .Release.Namespace }}-reg-policy \
            bound_service_account_names=registration-service \
            bound_service_account_namespaces={{ .Release.Namespace }} \
            policies=registration-{{ .Release.Namespace }}-admin ttl=1h
